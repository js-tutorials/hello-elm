Elm.Pages = Elm.Pages || {};
Elm.Pages.User = Elm.Pages.User || {};
Elm.Pages.User.View = Elm.Pages.User.View || {};
Elm.Pages.User.View.make = function (_elm) {
   "use strict";
   _elm.Pages = _elm.Pages || {};
   _elm.Pages.User = _elm.Pages.User || {};
   _elm.Pages.User.View = _elm.Pages.User.View || {};
   if (_elm.Pages.User.View.values) return _elm.Pages.User.View.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Company$Model = Elm.Company.Model.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Pages$User$Model = Elm.Pages.User.Model.make(_elm),
   $Pages$User$Update = Elm.Pages.User.Update.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var viewCompanies = function (company) {    return A2($Html.li,_U.list([]),_U.list([$Html.text(company.label)]));};
   var view = F2(function (address,model) {
      var _p0 = model.name;
      if (_p0.ctor === "Anonymous") {
            return A2($Html.div,_U.list([]),_U.list([$Html.text("This is wrong - anon user cannot reach this!")]));
         } else {
            var mainTitle = A2($Html.h3,
            _U.list([$Html$Attributes.$class("title")]),
            _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("glyphicon glyphicon-user")]),_U.list([])),$Html.text(" My account")]));
            return A2($Html.div,
            _U.list([$Html$Attributes.id("my-account"),$Html$Attributes.$class("container")]),
            _U.list([A2($Html.div,
            _U.list([$Html$Attributes.$class("wrapper -suffix")]),
            _U.list([mainTitle
                    ,A2($Html.h4,_U.list([$Html$Attributes.$class("name")]),_U.list([$Html.text(A2($Basics._op["++"],"Welcome ",_p0._0))]))
                    ,A2($Html.h4,_U.list([$Html$Attributes.$class("company-title")]),_U.list([$Html.text("Your companies are:")]))
                    ,A2($Html.ul,_U.list([$Html$Attributes.$class("companies")]),A2($List.map,viewCompanies,model.companies))]))]));
         }
   });
   return _elm.Pages.User.View.values = {_op: _op,view: view,viewCompanies: viewCompanies};
};